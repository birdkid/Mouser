// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	monitor "github.com/birdkid/mouser/pkg/hotkeys/monitor"
	mock "github.com/stretchr/testify/mock"
)

// Engine is an autogenerated mock type for the Engine type
type Engine struct {
	mock.Mock
}

// DeinitMonitor provides a mock function with given fields:
func (_m *Engine) DeinitMonitor() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// InitMonitor provides a mock function with given fields:
func (_m *Engine) InitMonitor() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// StartMonitor provides a mock function with given fields: m
func (_m *Engine) StartMonitor(m *monitor.Monitor) error {
	ret := _m.Called(m)

	var r0 error
	if rf, ok := ret.Get(0).(func(*monitor.Monitor) error); ok {
		r0 = rf(m)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// StopMonitor provides a mock function with given fields:
func (_m *Engine) StopMonitor() {
	_m.Called()
}
